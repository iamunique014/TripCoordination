@model TripCoordination.Common.ViewModel.StudentDashboardViewModel
@{
    ViewData["Title"] = "Student Dashboard";
}

<div class="page-title p-3 mb-4">
    <h3>Welcome to Your Dashboard</h3>

    <!-- Quick Action Buttons -->
    <div class="row mt-4">
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/Home/Index" class="btn btn-outline-primary w-100">
                <i class="bi bi-search"></i> Find a Trip
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/Student/MyTrips" class="btn btn-outline-primary w-100">
                <i class="bi bi-list-check"></i> My Trips
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/TripRequest/CreateRequest" class="btn btn-outline-primary w-100">
                <i class="bi bi-plus-circle"></i> Request a Trip
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/RouteRequest/CreateRouteRequest" class="btn btn-outline-primary w-100">
                <i class="bi bi-plus-circle"></i> Request a Route
            </a>
        </div>
    </div>
</div>


@if (TempData["Success"] != null)
{
    <div class="alert alert-success  d-flex alert-container-win alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>
        <div>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}
else if (TempData["Error"] != null)
{
    <div class="alert alert-danger  d-flex alert-container-lose alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>
        <div>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}

@if (TempData["Info"] != null)
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle me-2"></i>
        @TempData["Info"]
    </div>
}
else
{
    <div class="row">
        <div class="col-lg-8">
            <!-- Quick Stats -->
            <div class="container-content mb-4">
                <div class="row">
                    <div class="col-12 col-xl-4 mb-3 ">
                        <div class="text-center pt-3 content-wrapper">
                            <div class="container-body">
                                <h5 class="">Total Trips Joined</h5>
                                <p class="display-6">@Model.TripStats.TotalTripsJoined</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-xl-4 mb-3 ">
                        <div class="text-center pt-3 content-wrapper">
                            <div class="container-body">
                                <h5>Total Requests Made</h5>
                                <p class="display-6">@Model.TripStats.TotalRequestsMade</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-xl-4 mb-3 ">
                        <div class="text-center pt-3 content-wrapper">
                            <div class="container-body">
                                <h5 class="">This Month's Trips</h5>
                                <p class="display-6">@Model.TripStats.TripsJoinedThisMonth</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--Trips Created Monthly Bargraph-->
            <div class="container-content mb-4">
                <div class="container-header mb-2">
                    Trips Created This Year
                </div>
                <div class="card-body">
                    @await Html.PartialAsync("~/Views/Shared/Charts/_ChartPartial.cshtml", "tripsJoinedChart")
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <!-- Upcoming Trip -->
            <div class="container-content mb-4">
                <div class="container-header">
                    <i class="bi bi-calendar-event"></i> Upcoming Trip
                </div>
                <div class="container-body px-3 pt-3">
                    @if (Model.UpcomingTrip != null)
                    {
                        <p class="color-test"><strong>Date & Time:</strong> @Model.UpcomingTrip.DepartureDate.ToString("f")</p>
                        <p class="testing"><strong>Route:</strong> @Model.UpcomingTrip.FromLocation → @Model.UpcomingTrip.ToLocation</p>
                        <p><strong>Pickup Point:</strong> @Model.UpcomingTrip.PickupPoint</p>
                        <p><strong>Destination:</strong> @Model.UpcomingTrip.DestinationName</p>
                        <p><strong>Organizer:</strong> @Model.UpcomingTrip.OrganizerName @Model.UpcomingTrip.OrganizerSurname</p>
                    }
                    else
                    {
                        <div class="text-muted">You haven't joined any upcoming trips. <a href="/Home/Index">Find one now</a>.</div>
                    }
                </div>
            </div>

            <!-- Recent Trip Requests -->
            <div class="container-content mb-4">
                <div class="container-header">
                    <i class="bi bi-clock-history"></i> Recent Trip Requests
                </div>
                <div class="container-body p-3">
                    @if (Model.RecentTripRequests?.Any() == true)
                    {
                        <ul class="list-group bg-container">
                            @foreach (var request in Model.RecentTripRequests)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@request.FromLocation → @request.ToLocation</strong><br />
                                        <small class="text-muted">Requested on @request.RequestedAt.ToShortDateString()</small>
                                    </div>
                                    <span class="badge rounded-pill
                                                                                    @(request.IsApproved == true ? "bg-success" :
                                                                                                                                                                        request.IsApproved == false ? "bg-danger" : "bg-warning text-dark")">
                                        @(request.IsApproved == true ? "Approved" :
                                                                    request.IsApproved == false ? "Declined" : "Pending")
                        </span>
                    </li>
                                        }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">You haven’t made any trip requests yet.</p>
                    }
                </div>
            </div>
        </div>

    </div>

}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const canvas = document.getElementById('tripsJoinedChart');
            if (!canvas) {
                console.log('Chart canvas not found');
                return;
            }

            fetch('/Student/GetTripsJoinedChartData')
                .then(res => res.json())
                .then(data => {
                    const ctx = canvas.getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: data.map(d => d.label),
                            datasets: [{
                                label: 'Trips Joined',
                                data: data.map(d => d.value),
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                });



            // const dualBarCtx = document.getElementById('seatUtilizationChart');
            // if (!dualBarCtx) {
            //     console.log('Canvas for chart not found');
            //     return;
            // }

            // fetch('/TripCreator/GetSeatUtilizationChartData')
            //     .then(res => res.json())
            //     .then(data => {
            //         const labels = data.map(d => d.label);
            //         const filled = data.map(d => d.filled);
            //         const available = data.map(d => d.available);

            //         new Chart(dualBarCtx.getContext('2d'), {
            //             type: 'bar',
            //             data: {
            //                 labels: labels,
            //                 datasets: [
            //                     {
            //                         label: 'Seats Filled',
            //                         data: filled,
            //                         backgroundColor: 'rgba(54, 162, 235, 0.7)',
            //                         stack: 'Stack 0',
            //                     },
            //                     {
            //                         label: 'Seats Available',
            //                         data: available,
            //                         backgroundColor: 'rgba(255, 206, 86, 0.7)',
            //                         stack: 'Stack 0',
            //                     }
            //                 ]
            //             },
            //             options: {
            //                 responsive: true,
            //                 plugins: {
            //                     title: {
            //                         display: true,
            //                         text: 'Seats Filled vs Available Per Trip'
            //                     }
            //                 },
            //                 scales: {
            //                     x: {
            //                         stacked: true
            //                     },
            //                     y: {
            //                         stacked: true,
            //                         beginAtZero: true
            //                     }
            //                 }
            //             }
            //         });
            // })
            // .catch(error => console.error('Error loading chart data:', error));
        });
    </script>
}