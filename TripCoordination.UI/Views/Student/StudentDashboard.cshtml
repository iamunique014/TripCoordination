@model TripCoordination.Common.ViewModel.StudentDashboardViewModel
@{
    ViewData["Title"] = "Student Dashboard";
}

<div class="page-title p-3 mb-4">
    <h3>Welcome to Your Dashboard</h3>

    <!-- Quick Action Buttons -->
    <div class="row mt-4">
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/Home/Index" class="btn btn-outline-primary w-100">
                <i class="bi bi-search"></i> Find a Trip
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/Student/MyTrips" class="btn btn-outline-primary w-100">
                <i class="bi bi-list-check"></i> My Trips
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/TripRequest/CreateRequest" class="btn btn-outline-primary w-100">
                <i class="bi bi-plus-circle"></i> Request a Trip
            </a>
        </div>
        <div class="col-xl-3 col-sm-6 mb-2">
            <a href="/RouteRequest/CreateRouteRequest" class="btn btn-outline-primary w-100">
                <i class="bi bi-plus-circle"></i> Request a Route
            </a>
        </div>
    </div>
</div>

<!-- Upcoming Trip -->
<div class="container-content mb-4">
    <div class="container-header">
        <i class="bi bi-calendar-event"></i> Upcoming Trip
    </div>
    <div class="container-body px-3 pt-3">
        @if (Model.UpcomingTrip != null)
        {
            <p class="color-test"><strong >Date & Time:</strong> @Model.UpcomingTrip.DepartureDate.ToString("f")</p>
            <p class="testing"><strong>Route:</strong> @Model.UpcomingTrip.FromLocation → @Model.UpcomingTrip.ToLocation</p>
            <p><strong>Pickup Point:</strong> @Model.UpcomingTrip.PickupPoint</p>
            <p><strong>Destination:</strong> @Model.UpcomingTrip.DestinationName</p>
            <p><strong>Organizer:</strong> @Model.UpcomingTrip.OrganizerName @Model.UpcomingTrip.OrganizerSurname</p>
        }
        else
        {
            <div class="text-muted">You haven't joined any upcoming trips. <a href="/Home/Index">Find one now</a>.</div>
        }
    </div>
</div>


<!-- Quick Stats -->
<div class="container-content mb-4">
    <div class="row">
        <div class="col-12 col-xl-4 mb-3 ">
            <div class="text-center pt-3 content-wrapper">
                <div class="container-body">
                    <h5 class="">Total Trips Joined</h5>
                    <p class="display-6">@Model.TripStats.TotalTripsJoined</p>
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4 mb-3 ">
            <div class="text-center pt-3 content-wrapper">
                <div class="container-body">
                    <h5>Total Requests Made</h5>
                    <p class="display-6">@Model.TripStats.TotalRequestsMade</p>
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4 mb-3 ">
            <div class="text-center pt-3 content-wrapper">
                <div class="container-body">
                    <h5 class="">This Month's Trips</h5>
                    <p class="display-6">@Model.TripStats.TripsJoinedThisMonth</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Trip Requests -->
<div class="container-content mb-4">
    <div class="container-header">
        <i class="bi bi-clock-history"></i> Recent Trip Requests
    </div>
    <div class="container-body p-3">
        @if (Model.RecentTripRequests?.Any() == true)
        {
            <ul class="list-group bg-container">
                @foreach (var request in Model.RecentTripRequests)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            <strong>@request.FromLocation → @request.ToLocation</strong><br />
                            <small class="text-muted">Requested on @request.RequestedAt.ToShortDateString()</small>
                        </div>
                        <span class="badge rounded-pill
                                                        @(request.IsApproved == true ? "bg-success" :
                                                                                request.IsApproved == false ? "bg-danger" : "bg-warning text-dark")">
                            @(request.IsApproved == true ? "Approved" :
                                                request.IsApproved == false ? "Declined" : "Pending")
                </span>
            </li>
                        }
            </ul>
        }
        else
        {
            <p class="text-muted">You haven’t made any trip requests yet.</p>
        }
    </div>
</div>



